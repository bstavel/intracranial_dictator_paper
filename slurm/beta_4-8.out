
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #### batch script for regressions on scf cluster ###
> 
> ### SUBJECT IR35!!!! ###
> 
> ## libraries ##
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ”[39m [34mggplot2[39m 3.2.1     [32mâœ”[39m [34mpurrr  [39m 0.3.3
[32mâœ”[39m [34mtibble [39m 2.1.3     [32mâœ”[39m [34mdplyr  [39m 0.8.3
[32mâœ”[39m [34mtidyr  [39m 1.0.0     [32mâœ”[39m [34mstringr[39m 1.4.0
[32mâœ”[39m [34mreadr  [39m 1.3.1     [32mâœ”[39m [34mforcats[39m 0.4.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mâœ–[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mâœ–[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
> library(ggplot2)
> library(magrittr)

Attaching package: â€˜magrittrâ€™

The following object is masked from â€˜package:purrrâ€™:

    set_names

The following object is masked from â€˜package:tidyrâ€™:

    extract

> library(zoo)

Attaching package: â€˜zooâ€™

The following objects are masked from â€˜package:baseâ€™:

    as.Date, as.Date.numeric

> library(lme4)
Loading required package: Matrix

Attaching package: â€˜Matrixâ€™

The following objects are masked from â€˜package:tidyrâ€™:

    expand, pack, unpack

> library(doParallel)
Loading required package: foreach

Attaching package: â€˜foreachâ€™

The following objects are masked from â€˜package:purrrâ€™:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> library(parallel)
> library(foreach)
> library(here)
here() starts at /Users/bstavel/Projects/dictator_analysis/dictator_game/dg_behave_analysis
> library(fs)
> 
> ## hand written functions ##
> source(path(here(), "R", "load_behave_data.R"))
> source(path(here(), "R", "prep_behave_data.R"))
> source(path(here(), "R", "stretch_start_end.R"))
> source(path(here(), "R", "load_high_gamma_data.R"))
> source(path(here(), "R", "rolling_window_and_baseline.R"))
> source(path(here(), "R", "run_permuted_regressions.R"))
> source(path(here(), "R", "run_permuted_regressions_par.R"))
> source(path(here(), "R", "run_filtered_anova.R"))
> source(path(here(), "R", 'mutate_cond.R'))
> 
> ## paralellization ##
> nCores <- 2
> registerDoParallel(nCores)
> 
> ## read in data ##
> file_path_to_elecs_of_interest <- path(here(), "munge", "IR35_elecs_of_interest_insula.csv")
> path_hg_clean <- path(here(), "munge", "IR35", "hg_behave_choice_locked_cut_fixation_150_insula.csv")
> hg_behave <-  read.csv(path_hg_clean)
> elecs_to_use <- read.csv(file_path_to_elecs_of_interest)
> 
> ## regression parameters ##
> # save info needed for regressions #
> nBins <- colnames(hg_behave %>% select(starts_with("pre_"), starts_with("post_")))
> niter <- 1 
> 
> ## insula ##
> # prep #
> insula_elecs <- elecs_to_use %>% select(Electrode)
> brain_behave_data <- hg_behave %>%
+   filter(grepl(paste(insula_elecs$Electrode, collapse = "|"), electrodes))
> insula_electrodes <- unique(brain_behave_data$electrodes)
> 
> ## run regressions ##
> # adv ineq #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "ineq_advent", nBins, region_name = "Insula",niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: ineq_advent"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> # disadv ineq #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "ineq_disadvent", nBins, region_name = "Insula",niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: ineq_disadvent"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> # self payoff #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "self_payoff", nBins, region_name = "Insula",niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: self_payoff"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> # other payoff #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "other_payoff", nBins, region_name = "Insula",niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: other_payoff"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> # self foregone #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "self_foregone", nBins, region_name = "Insula",niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: self_foregone"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> # other foregone #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "other_foregone", nBins, region_name = "Insula",niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: other_foregone"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> # self var paroff #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "self_var_payoff", nBins, region_name = "Insula", niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: self_var_payoff"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> # other var payoff #
> run_permuted_regressions_par(brain_behave_data, electrodes = insula_electrodes, regressor = "other_var_payoff", nBins, region_name = "Insula", niter, sub = "IR35", tag = "choice-locked")
[1] "Beginning regressions for predictor: other_var_payoff"
[1] "Starting electrode 1 of 9"
[1] "Starting electrode 2 of 9"
[1] "Starting electrode 3 of 9"
[1] "Starting electrode 4 of 9"
[1] "Starting electrode 5 of 9"
[1] "Starting electrode 6 of 9"
[1] "Starting electrode 7 of 9"
[1] "Starting electrode 8 of 9"
[1] "Starting electrode 9 of 9"
> 
> 
> proc.time()
   user  system elapsed 
 47.602   3.358  76.691 
